{"version":3,"sources":["components/Good/Good.jsx","components/GoodsList/GoodsList.jsx","components/AddGoodInput/AddGoodInput.jsx","components/AddGoodForm/AddGoodForm.jsx","components/ModalForm/ModalForm.jsx","API/api.js","components/Comment/Comment.jsx","components/CommentsList/CommentsList.jsx","components/ProductDetails/ProductDetails.jsx","App.jsx","index.js"],"names":["Good","good","deleteProduct","selectProduct","id","quantity","name","title","price","image","key","className","style","width","src","alt","to","onClick","type","data-bs-toggle","data-bs-target","data-bs-backdrop","data-bs-keyboard","tabIndex","aria-labelledby","aria-hidden","data-bs-dismiss","aria-label","GoodsList","state","goods","props","goodId","goodsFromStorage","JSON","parse","window","localStorage","getItem","setState","filter","setItem","stringify","prevProps","this","map","React","PureComponent","AddGoodInput","val","inputType","inputName","value","onChange","placeholder","isRequired","isValid","required","String","toLowerCase","classNames","undefined","validURL","str","RegExp","test","initialState","description","isQuantityValid","isPriceValid","isNameValid","isTitleValid","isImageValid","isFormValid","isProductGiven","stateKey","product","AddGoodForm","clearForm","newState","event","target","length","formValidate","onSubmit","preventDefault","newGood","method","initialDetails","disabled","Component","ModalForm","buttonText","modalTitle","newGoodId","getComments","a","fetch","response","json","comments","data","getProductComments","productId","allComments","productComments","comment","postId","Comment","deleteComment","email","body","createdAt","href","Date","toDateString","CommentsList","preparedComments","commentId","getProductByUrl","url","goodIdFromUrl","split","find","ProductDetails","selectedProduct","location","pathname","editProduct","updatedGoods","initialProducts","commentsRender","addComment","newComment","prevState","then","rows","minLength","getSelectedProductIdFromURL","URL","arr","App","products","selectedProductId","isSortedByName","newStateGoods","newGoods","sortByName","sortedGoods","sort","cur","next","localeCompare","sortByQuantity","goodsCopy","addNewGood","stringifiedGoods","path","exact","defaultValue","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.444be4d7.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const Good = ({ good, deleteProduct, selectProduct }) => {\n  const { id, quantity, name, title, price, image } = good;\n\n  return (\n    <div key={id} className=\"card\" style={{ width: '18rem' }}>\n      <img src={image} className=\"card-img-top\" alt=\"...\" />\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{name}</h5>\n        <p className=\"card-text\">{title}</p>\n        <div className=\"card-priceAndQuantity\">\n          <span>{`Price: ${price}$`}</span>\n          <span>{`Quantity: ${quantity}`}</span>\n        </div>\n\n        <div className=\"card-buttons\">\n          <Link\n            to={`/Product/${id}`}\n            className=\"btn btn-primary\"\n            onClick={() => selectProduct(id)}\n          >\n            Details\n          </Link>\n\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            data-bs-toggle=\"modal\"\n            data-bs-target={`#Item${id}`}\n          >\n            Delete this product\n          </button>\n        </div>\n\n        <div\n          className=\"modal fade\"\n          id={`Item${id}`}\n          data-bs-backdrop=\"static\"\n          data-bs-keyboard=\"false\"\n          tabIndex=\"-1\"\n          aria-labelledby=\"staticBackdropLabel\"\n          aria-hidden=\"true\"\n        >\n          <div className=\"modal-dialog\">\n            <div className=\"modal-content\">\n\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\" id=\"staticBackdropLabel\">\n                  Confirm that you want to delete the item\n                </h5>\n                <button\n                  type=\"button\"\n                  className=\"btn-close\"\n                  data-bs-dismiss=\"modal\"\n                  aria-label=\"Close\"\n                />\n              </div>\n\n              <div className=\"modal-body\">\n                {`Are you sure that you want to delete \"${title}\"?!`}\n              </div>\n\n              <div className=\"modal-footer\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-bs-dismiss=\"modal\"\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-primary\"\n                  data-bs-dismiss=\"modal\"\n                  onClick={() => deleteProduct(id)}\n                >\n                  Delete\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable react/no-did-update-set-state */\n/* eslint-disable react/prop-types */\nimport React from 'react';\n\nimport { Good } from '../Good';\n\nimport './GoodsList.scss';\n\nexport class GoodsList extends React.PureComponent {\n  state = {\n    goods: [...this.props.goods],\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.goods !== this.props.goods) {\n      this.setState({ goods: this.props.goods });\n    }\n  }\n\n  deleteProduct = (goodId) => {\n    const goodsFromStorage = JSON.parse(window.localStorage.getItem('goods'));\n\n    this.setState((state) => {\n      const newGoods = goodsFromStorage\n        ? goodsFromStorage.filter(good => good.id !== goodId)\n        : state.goods.filter(good => good.id !== goodId);\n\n      return { goods: newGoods };\n    }, () => {\n      window.localStorage.setItem('goods', JSON.stringify(this.state.goods));\n    });\n  }\n\n  render() {\n    const { goods } = this.state;\n    const { selectProduct } = this.props;\n\n    return (\n      <div>\n        <ul\n          className=\"GoodsList\"\n        >\n          {goods.map(good => (\n            <li key={good.id} className=\"GoodsList__item\">\n              <Good\n                key={good.id}\n                good={good}\n                deleteProduct={this.deleteProduct}\n                selectProduct={selectProduct}\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport classNames from 'classnames';\n\nfunction getBool(val) {\n  return !!JSON.parse(String(val).toLowerCase());\n}\n\nexport const AddGoodInput = ({\n  inputType, inputName, value, onChange, placeholder, isRequired, isValid,\n}) => (\n  <div>\n    <label>\n      <span>{inputName}</span>\n      <input\n        type={inputType}\n        name={inputName}\n        value={value}\n        placeholder={placeholder}\n        onChange={onChange}\n        required={getBool(isRequired)}\n        className={classNames('form-control', {\n          'is-valid': isValid,\n          'is-invalid': !isValid && isValid !== null && isValid !== undefined,\n        })}\n      />\n    </label>\n  </div>\n);\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { AddGoodInput } from '../AddGoodInput';\n\nfunction validURL(str) {\n  const pattern = new RegExp('^(https?:\\\\/\\\\/)?' // protocol\n    + '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' // domain name\n    + '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' // OR ip (v4) address\n    + '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' // port and path\n    + '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' // query string\n    + '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\n\n  return !!pattern.test(str);\n}\n\nconst initialState = {\n  quantity: 0,\n  name: '',\n  title: '',\n  price: 0,\n  description: '',\n  image: '',\n  isQuantityValid: null,\n  isPriceValid: null,\n  isNameValid: null,\n  isTitleValid: null,\n  isImageValid: null,\n  isFormValid: false,\n};\n\nfunction isProductGiven(stateKey, product) {\n  // if it is editing of existing product\n  // it will return the value of key to AddGoodForm state\n  if (product) {\n    return product[stateKey];\n  }\n\n  return false;\n}\n\nexport class AddGoodForm extends React.Component {\n  // if function isProductGiven return false - it will take second parameter\n  state = {\n    id: isProductGiven('id', this.props.product)\n    || this.props.goodId,\n    quantity: isProductGiven('quantity', this.props.product) || 0,\n    name: isProductGiven('name', this.props.product) || '',\n    title: isProductGiven('title', this.props.product) || '',\n    price: isProductGiven('price', this.props.product) || 0,\n    description: isProductGiven('description', this.props.product) || '',\n    image: isProductGiven('image', this.props.product) || '',\n    isQuantityValid: this.props.product ? true : null,\n    isPriceValid: this.props.product ? true : null,\n    isNameValid: this.props.product ? true : null,\n    isTitleValid: this.props.product ? true : null,\n    isImageValid: this.props.product ? true : null,\n  }\n\n  clearForm = (newState) => {\n    this.setState(newState);\n  }\n\n  onChange = (event) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        if (value.length > 5) {\n          this.setState({ isNameValid: true });\n        } else {\n          this.setState({ isNameValid: false });\n        }\n\n        break;\n\n      case 'title':\n        if (value.length > 10) {\n          this.setState({ isTitleValid: true });\n        } else {\n          this.setState({ isTitleValid: false });\n        }\n\n        break;\n\n      case 'price':\n        if (value > 0) {\n          this.setState({ isPriceValid: true });\n        } else {\n          this.setState({ isPriceValid: false });\n        }\n\n        break;\n\n      case 'quantity':\n        if (value > 0) {\n          this.setState({ isQuantityValid: true });\n        } else {\n          this.setState({ isQuantityValid: false });\n        }\n\n        break;\n\n      case 'image':\n        if (validURL(value)) {\n          this.setState({ isImageValid: true });\n        } else {\n          this.setState({ isImageValid: false });\n        }\n\n        break;\n\n      default:\n        this.setState({ [name]: value });\n    }\n\n    this.setState({ [name]: value });\n  }\n\n  formValidate = () => {\n    const {\n      isQuantityValid, isPriceValid, isNameValid, isTitleValid, isImageValid,\n    } = this.state;\n\n    if (isQuantityValid\n      && isPriceValid\n      && isNameValid\n      && isTitleValid\n      && isImageValid\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault();\n\n    const { id, name, title, description, price, quantity, image } = this.state;\n    const newGood = {\n      id,\n      name,\n      title,\n      description,\n      price,\n      quantity,\n      image,\n    };\n\n    this.props.onSubmit(newGood);\n\n    // if product is given - it souuld not increase id\n    // because it was editing but not creating a new one\n    if (!this.props.product) {\n      this.setState(state => ({\n        id: state.id + 1,\n        quantity: 0,\n        name: '',\n        title: '',\n        price: 0,\n        description: '',\n        image: '',\n        isQuantityValid: null,\n        isPriceValid: null,\n        isNameValid: null,\n        isTitleValid: null,\n        isImageValid: null,\n      }));\n    }\n  }\n\n  render() {\n    const {\n      quantity, name, title, price, description, image,\n      isNameValid, isTitleValid, isImageValid, isQuantityValid, isPriceValid,\n    } = this.state;\n\n    const { product } = this.props;\n\n    return (\n      <section className=\"AddGoodForm__section\">\n        <form method=\"post\" onSubmit={this.onSubmit}>\n          <AddGoodInput\n            inputType=\"text\"\n            inputName=\"name\"\n            placeholder=\"Name of the product\"\n            value={name}\n            onChange={this.onChange}\n            isRequired=\"true\"\n            isValid={isNameValid}\n          />\n\n          <AddGoodInput\n            inputType=\"text\"\n            inputName=\"title\"\n            placeholder=\"Short description\"\n            value={title}\n            onChange={this.onChange}\n            isRequired=\"true\"\n            isValid={isTitleValid}\n          />\n\n          <AddGoodInput\n            inputType=\"text\"\n            inputName=\"description\"\n            placeholder=\"Full description\"\n            value={description}\n            onChange={this.onChange}\n            isRequired=\"false\"\n          />\n\n          <AddGoodInput\n            inputType=\"number\"\n            inputName=\"price\"\n            placeholder=\"The price in $\"\n            value={price}\n            onChange={this.onChange}\n            isRequired=\"true\"\n            isValid={isPriceValid}\n          />\n\n          <AddGoodInput\n            inputType=\"number\"\n            inputName=\"quantity\"\n            placeholder=\"quantity\"\n            value={quantity}\n            onChange={this.onChange}\n            isRequired=\"true\"\n            isValid={isQuantityValid}\n          />\n\n          <AddGoodInput\n            inputType=\"url\"\n            inputName=\"image\"\n            placeholder=\"The image URL address\"\n            value={image}\n            onChange={this.onChange}\n            isRequired=\"false\"\n            isValid={isImageValid}\n          />\n\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary\"\n            data-bs-dismiss=\"modal\"\n            // if product exists we reset fields to initialDetails\n            onClick={() => (product\n              ? this.clearForm(product.initialDetails)\n              : this.clearForm(initialState)\n            )}\n          >\n            Cancel\n          </button>\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            data-bs-dismiss=\"modal\"\n            disabled={!this.formValidate()}\n          >\n            Save\n          </button>\n        </form>\n      </section>\n    );\n  }\n}\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { AddGoodForm } from '../AddGoodForm';\n\nexport const ModalForm = ({\n  buttonText, modalTitle, onSubmit, newGoodId, product,\n}) => (\n  <div className=\"AddGoodForm\">\n    <button\n      type=\"button\"\n      className=\"btn btn-primary\"\n      data-bs-toggle=\"modal\"\n      data-bs-target=\"#AddGoodForm\"\n    >\n      {buttonText}\n    </button>\n\n    <div\n      className=\"modal fade\"\n      id=\"AddGoodForm\"\n      data-bs-backdrop=\"static\"\n      data-bs-keyboard=\"false\"\n      tabIndex=\"-1\"\n      aria-labelledby=\"staticBackdropLabel\"\n      aria-hidden=\"true\"\n    >\n      <div className=\"modal-dialog\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\" id=\"staticBackdropLabel\">\n              {modalTitle}\n            </h5>\n          </div>\n          <div className=\"modal-body\">\n            <AddGoodForm\n              goodId={newGoodId}\n              onSubmit={onSubmit}\n                // if product is giver - fileds are valid for default\n                // otherwise field is waiting onChange and then will\n                // check if it is valid\n              product={product && {\n                ...product,\n                initialDetails: { ...product },\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n","// const API_URL = 'https://fakestoreapi.com';\nconst API_COMMENTS = 'https://mate-api.herokuapp.com/comments';\n\nexport const getComments = async() => {\n  const response = await fetch(API_COMMENTS);\n  const comments = await response.json();\n\n  // .filter(comment => comment.body && comment.name);\n  return comments.data;\n};\n\nexport const getProductComments = async(productId) => {\n  const allComments = await getComments();\n  const productComments = allComments.filter(\n    comment => comment.postId === productId,\n  );\n\n  return productComments;\n};\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport './Comment.scss';\n\nexport const Comment = ({ comment, deleteComment }) => {\n  const { id, email, name, body, createdAt } = comment;\n\n  return (\n    <div className=\"comment\" key={id}>\n      <h5>{`Name: ${name}`}</h5>\n      <div>\n        Email:\n        <a href={`mailto:${email}`}>\n          {` ${email}`}\n        </a>\n      </div>\n\n      <p>{`Comment body: ${body}`}</p>\n      <div className=\"comment__footer\">\n        <span>{`Was published: ${new Date(createdAt).toDateString()}`}</span>\n\n        <button\n          type=\"button\"\n          onClick={() => deleteComment(id)}\n          className=\"btn btn-primary comment__delete-button\"\n        >\n          Delete comment\n        </button>\n      </div>\n    </div>\n  );\n};\n","\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { Comment } from '../Comment';\n\nexport class CommentsList extends React.Component {\n  state = {\n    preparedComments: this.props.comments,\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.comments !== this.props.comments) {\n      this.setState({\n        preparedComments: this.props.comments,\n      });\n    }\n  }\n\n  deleteComment = (commentId) => {\n    this.setState(state => ({\n      preparedComments: [...state.preparedComments].filter(\n        comment => comment.id !== commentId,\n      ),\n    }));\n  };\n\n  render() {\n    const { preparedComments } = this.state;\n\n    return preparedComments.length > 0 ? (\n      <ul className=\"comments__list\">\n        {preparedComments.map(comment => (\n          <li key={comment.id} className=\"comments__item\">\n            <Comment\n              key={comment.id}\n              comment={comment}\n              deleteComment={this.deleteComment}\n            />\n          </li>\n        ))}\n      </ul>\n    ) : (\n      <div className=\"comments__dontExist\">No comments for this product</div>\n    );\n  }\n}\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { getProductComments } from '../../API/api';\nimport { CommentsList } from '../CommentsList/CommentsList';\nimport { ModalForm } from '../ModalForm';\n\nimport './Details.scss';\n\nfunction getProductByUrl(url) {\n  const goodIdFromUrl = url.split('/');\n  const goodsFromStorage = JSON.parse(window.localStorage.getItem('goods'));\n\n  return goodsFromStorage.find(\n    good => good.id === goodIdFromUrl[goodIdFromUrl.length - 1],\n  );\n}\n\nexport class ProductDetails extends React.Component {\n  state = {\n    selectedProduct: this.props.selectedProduct\n      || getProductByUrl(window.location.pathname),\n    comments: null,\n    name: '',\n    email: '',\n    body: '',\n  }\n\n  componentDidMount() {\n    const { selectedProduct } = this.state;\n\n    getProductComments(selectedProduct.id)\n      .then(comments => this.setState({ comments }));\n  }\n\n  editProduct = (newGood) => {\n    this.setState({\n      selectedProduct: newGood,\n    }, () => {\n      const { selectedProduct } = this.state;\n\n      const goodsFromStorage = JSON.parse(window.localStorage.getItem('goods'))\n        || this.props.initialProducts;\n\n      const updatedGoods = goodsFromStorage.map((good) => {\n        if (good.id === selectedProduct.id) {\n          return selectedProduct;\n        }\n\n        return good;\n      });\n\n      window.localStorage.setItem('goods', JSON.stringify(updatedGoods));\n    });\n  }\n\n  commentsRender = () => {\n    const { comments } = this.state;\n\n    if (comments === null) {\n      return <p>Comments are loading from server</p>;\n    }\n\n    if (comments.length === 0) {\n      return <p>No comments for this product</p>;\n    }\n\n    return true;\n  }\n\n  onChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  }\n\n  addComment = (event) => {\n    event.preventDefault();\n    const { comments, name, email, body } = this.state;\n    const newComment = {\n      id: comments.length + 1,\n      name,\n      email,\n      body,\n      createdAt: new Date(),\n    };\n\n    this.setState(prevState => ({\n      comments: [newComment, ...prevState.comments],\n      name: '',\n      email: '',\n      body: '',\n    }));\n  }\n\n  render() {\n    const { selectedProduct, comments } = this.state;\n    const {\n      id, image, name, title, price, description, quantity,\n    } = selectedProduct;\n    const { email, body } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"ProductDetails\">\n          <div className=\"ProductDetails__photo-section\">\n            <img\n              src={image}\n              alt=\"Product\"\n              className=\"ProductDetails__img\"\n            />\n          </div>\n\n          <div className=\"ProductDetails__info\">\n            <h2>{name}</h2>\n            <h3>{title}</h3>\n            <p>{description}</p>\n            <div className=\"ProductDetails__priceAndQuantity\">\n              <p>{`Quantity: ${quantity}`}</p>\n              <p>{`Price: ${price}$`}</p>\n            </div>\n\n            <div className=\"ProductDetails__buttons\">\n              <Link to=\"/\" className=\"btn btn-primary\">Back</Link>\n              <ModalForm\n                buttonText=\"Edit\"\n                modalTitle=\"Fill in all the fields to save\"\n                onSubmit={this.editProduct}\n                id={id}\n                product={selectedProduct}\n              />\n            </div>\n          </div>\n\n        </div>\n\n        <div className=\"container comments\">\n          <form className=\"comments__form\" onSubmit={this.addComment}>\n            <div className=\"form-group\">\n              <div>\n                <label>\n                  Username\n                  <input\n                    className=\"form-control\"\n                    rows=\"3\"\n                    type=\"text\"\n                    name=\"name\"\n                    value={this.state.name}\n                    onChange={this.onChange}\n                    required\n                    minLength=\"5\"\n                  />\n                </label>\n              </div>\n\n              <div>\n                <label>\n                  Email\n                  <input\n                    className=\"form-control\"\n                    type=\"email\"\n                    name=\"email\"\n                    value={email}\n                    onChange={this.onChange}\n                    required\n                  />\n                </label>\n              </div>\n\n              <div>\n                <label>\n                  Comment body\n                  <textarea\n                    className=\"form-control\"\n                    type=\"text\"\n                    minLength=\"5\"\n                    name=\"body\"\n                    value={body}\n                    onChange={this.onChange}\n                    required\n                  />\n                </label>\n              </div>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary \">\n              Add comment\n            </button>\n          </form>\n          {comments === null\n            ? <p>Comments are loading from server</p>\n            : <CommentsList comments={comments} />\n          }\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport products from './API/products.json';\n\nimport { GoodsList } from './components/GoodsList';\nimport { ModalForm } from './components/ModalForm';\nimport { ProductDetails } from './components/ProductDetails/ProductDetails';\n\nimport './App.scss';\nimport './styles/general.scss';\n\nfunction getSelectedProductIdFromURL(URL) {\n  const arr = URL.split('/');\n\n  if (arr.length > 0) {\n    return +arr[arr.length - 1];\n  }\n\n  return undefined;\n}\n\nclass App extends React.Component {\n  goodsFromStorage = JSON.parse(window.localStorage.getItem('goods'));\n\n  state = {\n    goods: this.goodsFromStorage || [...products],\n    selectedProductId: getSelectedProductIdFromURL(\n      window.location.pathname,\n    ) || 0,\n    isSortedByName: false,\n  };\n\n  componentDidMount() {\n    if (!this.goodsFromStorage) {\n      window.localStorage.setItem('goods', JSON.stringify(products));\n\n      this.goodsFromStorage = JSON.parse(window.localStorage.getItem('goods'));\n    }\n  }\n\n  newStateGoods = (newGoods) => {\n    this.setState({ goods: newGoods });\n  }\n\n  sortByName = () => {\n    const { goods, isSortedByName } = this.state;\n\n    if (isSortedByName) {\n      this.setState({\n        isSortedByName: false,\n        goods: this.goodsFromStorage,\n      });\n    } else {\n      const sortedGoods = [...goods].sort(\n        (cur, next) => cur.name.localeCompare(next.name),\n      );\n\n      this.setState(({\n        goods: sortedGoods,\n        isSortedByName: true,\n      }));\n    }\n  }\n\n  sortByQuantity = (event) => {\n    const { value } = event.target;\n    const { goods } = this.state;\n    const goodsCopy = [...goods];\n\n    switch (value) {\n      case 'increase':\n        goodsCopy.sort(\n          (cur, next) => cur.quantity - next.quantity,\n        );\n        this.newStateGoods(goodsCopy);\n        break;\n\n      case 'decrease':\n        goodsCopy.sort(\n          (cur, next) => next.quantity - cur.quantity,\n        );\n        this.newStateGoods(goodsCopy);\n        break;\n\n      default:\n        this.newStateGoods(this.goodsFromStorage);\n    }\n  }\n\n  addNewGood = (newGood) => {\n    this.setState(state => ({\n      goods: [...state.goods, newGood],\n    }), () => {\n      const stringifiedGoods = JSON.stringify(this.state.goods);\n\n      window.localStorage.setItem('goods', stringifiedGoods);\n    });\n  }\n\n  selectProduct = (selectedProductId) => {\n    this.setState({ selectedProductId });\n  }\n\n  render() {\n    const { selectedProductId, goods } = this.state;\n    const selectedProduct = goods.find(\n      product => product.id === selectedProductId,\n    );\n\n    return (\n      <Switch>\n        <Route path={`/Product/${selectedProductId}`}>\n          <ProductDetails\n            initialProducts={products}\n            selectedProduct={selectedProduct}\n          />\n        </Route>\n\n        <Route path=\"/\" exact>\n          <>\n            <div className=\"top-panel\">\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={this.sortByName}\n              >\n                Sort by Name\n              </button>\n              <select\n                name=\"quantitySort\"\n                className=\"btn btn-primary\"\n                onChange={this.sortByQuantity}\n              >\n                <option defaultValue=\"default\">Default</option>\n                <option value=\"increase\">Sort ascending</option>\n                <option value=\"decrease\">Sort descending</option>\n              </select>\n\n              <ModalForm\n                // if you want to see new products\n                // at the begin of list - use goods[0].id + 1\n                // if in at the end - goods[goods.length - 1].id + 1\n                newGoodId={goods[goods.length - 1].id + 1}\n                buttonText=\"New Product\"\n                modalTitle=\"Fill in all the fields to submit\"\n                onSubmit={this.addNewGood}\n              />\n            </div>\n            <div>List of Goods</div>\n            <GoodsList\n              goods={goods}\n              selectProduct={this.selectProduct}\n            />\n          </>\n        </Route>\n\n        {/* <Redirect to=\"/\" /> */}\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}